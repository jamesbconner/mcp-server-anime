[pytest]
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --cov=src/mcp_server_anime
    --cov-report=term-missing:skip-covered
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-branch
    --durations=10
    --maxfail=10

asyncio_mode = auto

markers =
    unit: Unit tests that don't require external dependencies
    integration: Integration tests that may require network access
    slow: Tests that take a long time to run
    smoke: Basic smoke tests for core functionality
    api: Tests that interact with external APIs
    cache: Tests related to caching functionality
    error: Tests focused on error handling
    validation: Tests for input validation
    xml: Tests for XML parsing functionality
    http: Tests for HTTP client functionality
    tools: Tests for MCP tools
    service: Tests for service layer functionality
    config: Tests for configuration management
    models: Tests for data models
    server: Tests for server functionality
    providers: Tests for provider system
    extensible: Tests for extensibility features
    circuit_breaker_isolation: Tests requiring circuit breaker isolation
    complete_isolation: Tests requiring complete test isolation
    database: Tests for database integration components
    cli: Tests for command-line interface components
    analytics: Tests for analytics and transaction logging

filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::pytest.PytestUnraisableExceptionWarning
    ignore::UserWarning:httpx.*
    ignore::UserWarning:asyncio.*
    ignore:ast.Str is deprecated:DeprecationWarning
    ignore:ast.Constant is deprecated:DeprecationWarning
    error::UserWarning:mcp_server_anime.*

minversion = 8.0

log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

cache_dir = .pytest_cache

junit_family = xunit2
junit_logging = system-out
junit_log_passing_tests = false